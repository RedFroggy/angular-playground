stages:
  - update-dependencies
  - test-and-qa
  - build
  - release
  - deploy

variables:
  PROJECT_VERSION: '1.0'

default:
  image: node:latest
  tags:
    - aws

test-and-qa:
  image: cypress/base:12.16.1
  stage: test-and-qa
  except:
    - schedules
    - tags
    - cloudfront
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
  script:
    - npm ci
    - npm run lint
    - npm run test:ci
    - npm run e2e:ci:concurrent

build:
  stage: build
  except:
    - schedules
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
    policy: pull
  artifacts:
    expire_in: 1 days
    paths:
      - dist/*
  only:
    refs:
      - master
      - cloudfront
  script:
    - npm run build

release:
  stage: release
  except:
    - schedules
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
    policy: pull
  only:
    refs:
      - master
  script:
    - npm run release

update-dependencies:
  only:
    - schedules
  stage: update-dependencies
  before_script:
    - npm ci
  script:
    - npm run update-dependencies

pages:
  stage: deploy
  except:
    - schedules
  only:
    - master
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    policy: pull
  script:
    - mv dist/* public/
    - echo "Frontend deployed on URL $CI_PAGES_URL"
  artifacts:
    expire_in: 1 days
    paths:
      - public

cloudfront:
  stage: deploy
  except:
    - schedules
  only:
    - master
    - cloudfront
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR-cloudfront
    paths:
      - node_modules/
    policy: pull
  script:
    - cd deploy
    - npm update -g aws-cdk
    - npm update
    - npm run build
    - cdk bootstrap
    - cdk deploy --require-approval=never

stages:
  - install
  - test-and-qa
  - build
  - release
  - deploy

variables:
  PROJECT_VERSION: '1.0'

default:
  image: node:latest
  tags:
    - aws

install-dependencies:
  stage: install
  except:
    - schedules
    - tags
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules
  script:
    - npm ci

test-and-qa:
  image: cypress/base:12.19.0
  stage: test-and-qa
  except:
    - schedules
    - tags
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules
    policy: pull
  script:
    - npm run lint
    - npm run test:ci
    - npm run e2e:ci:concurrent

build:
  stage: build
  except:
    - schedules
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules
    policy: pull
  artifacts:
    expire_in: 1 days
    paths:
      - dist/*
  only:
    refs:
      - master
  script:
    - npm run build

release:
  stage: release
  except:
    - schedules
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules
    policy: pull
  only:
    refs:
      - master
  script:
    - npm run release

cloudfront:
  stage: deploy
  except:
    - schedules
  only:
    - master
  environment:
    name: dev
    url: https://angular.redfroggy.io
  cache:
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules
    policy: pull
  script:
    - npm run aws-deploy -- -c domain=$DOMAIN -c subdomain=$SUBDOMAIN -c certificateArn=$CERTIFICATE_ARN
